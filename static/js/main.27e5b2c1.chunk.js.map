{"version":3,"sources":["ChatWindow/ChatWindow.module.css","MessageList/MessageList.module.css","PlayerName/PlayerName.module.css","DirectionalPad/DirectionalPad.module.css","ContentButton/ContentButton.module.css","ChatWindow/ChatWindow.js","PlayerName/PlayerName.js","DirectionalPad/DirectionalPad.js","content.js","ContentButton/ContentButton.js","MessageList/MessageList.js","ChatControl/ChatControl.js","app/useCountdown.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ChatWindow","content","chatWindowRef","useRef","useEffect","current","scrollIntoView","className","styles","chatWindow","chatList","map","name","text","id","isStatusMessage","ref","statusMessage","playerName","messageText","cx","classNames","bind","PlayerName","handleSetName","onSubmit","e","preventDefault","target","value","nameFormControl","type","nameButton","DirectionalPad","children","buttons","React","Children","toArray","TEAM","COMPLIMENTS","APOLOGIES","REACTIONS","UP_BUTTON","DOWN_BUTTON","LEFT_BUTTON","RIGHT_BUTTON","keyIcons","contentLists","ContentButton","handleClick","onClick","keyName","button","arrowIcons","upButton","leftButton","rightButton","downButton","MessageList","handleSendMessage","onSendMessage","list","quickChatHeading","typeHeading","i","icon","ChatControl","useState","visibleList","setVisibleList","startTime","seconds","setSeconds","interval","setInterval","s","clearInterval","useCountdown","remainingTime","resetTimer","handleOpenSection","section","message","App","messageList","setMessageList","setName","style","display","flexDirection","justifyContent","Date","now","previousList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27e5b2c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWindow\":\"ChatWindow_chatWindow__2ZnSX\",\"chatList\":\"ChatWindow_chatList__fI9eg\",\"playerName\":\"ChatWindow_playerName__JAN-0\",\"statusMessage\":\"ChatWindow_statusMessage__2SJwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MessageList_list__3H42F\",\"heading\":\"MessageList_heading__1kk07\",\"quickChatHeading\":\"MessageList_quickChatHeading__vY5Xz MessageList_heading__1kk07\",\"typeHeading\":\"MessageList_typeHeading__iKvvA MessageList_heading__1kk07\",\"button\":\"MessageList_button__wtvzk\",\"icon\":\"MessageList_icon__2IXEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerName\":\"PlayerName_playerName__1bD3Y\",\"nameFormControl\":\"PlayerName_nameFormControl__3Ql41\",\"nameButton\":\"PlayerName_nameButton__2emnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"DirectionalPad_buttonContainer__Adlu9\",\"button\":\"DirectionalPad_button__1faRu\",\"upButton\":\"DirectionalPad_upButton__3Zj7x\",\"leftButton\":\"DirectionalPad_leftButton__2CSPA\",\"rightButton\":\"DirectionalPad_rightButton__27jko\",\"downButton\":\"DirectionalPad_downButton__3D6Ik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContentButton_button__2Mj9J\"};","import { useEffect, useRef } from \"react\";\nimport styles from \"./ChatWindow.module.css\";\n\nexport const ChatWindow = ({ content = [] }) => {\n  const chatWindowRef = useRef(null);\n\n  useEffect(() => {\n    chatWindowRef.current && chatWindowRef.current.scrollIntoView();\n  }, [content]);\n\n  return (\n    <div className={styles.chatWindow}>\n      <div className={styles.chatList}>\n        {content.map(({ name, text, id, isStatusMessage }) => (\n          <div key={id} ref={chatWindowRef}>\n            {isStatusMessage && (\n              <span className={styles.statusMessage}>{text}</span>\n            )}\n            {!isStatusMessage && (\n              <>\n                <span className={styles.playerName}>{name}</span>\n                <span className={styles.messageText}>{text}</span>\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import classNames from \"classnames/bind\";\nimport styles from \"./PlayerName.module.css\";\n\nconst cx = classNames.bind(styles);\n\nexport const PlayerName = ({ handleSetName }) => {\n  return (\n    <div className={cx({ playerName: true })}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSetName(e.target.name.value);\n        }}\n      >\n        <input\n          className={cx({ nameFormControl: true })}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n        />\n        <button\n          className={cx({ nameFormControl: true, nameButton: true })}\n          type=\"submit\"\n        >\n          SAVE\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./DirectionalPad.module.css\";\n\nconst cx = classNames.bind(styles);\n\nexport const DirectionalPad = ({ children }) => {\n  const buttons = React.Children.toArray(children);\n  return (\n    <div className={cx(\"buttonContainer\")}>\n      <div className={cx(\"button\", \"upButton\")}>{buttons[0]}</div>\n      <div className={cx(\"button\", \"leftButton\")}>{buttons[1]}</div>\n      <div className={cx(\"button\", \"rightButton\")}>{buttons[2]}</div>\n      <div className={cx(\"button\", \"downButton\")}>{buttons[3]}</div>\n    </div>\n  );\n};\n","export const TEAM = \"Team\";\nexport const COMPLIMENTS = \"Compliments\";\nexport const APOLOGIES = \"Apologies\";\nexport const REACTIONS = \"Reactions\";\n\nexport const UP_BUTTON = \"upButton\";\nexport const DOWN_BUTTON = \"downButton\";\nexport const LEFT_BUTTON = \"leftButton\";\nexport const RIGHT_BUTTON = \"rightButton\";\n\nexport const keyBindings = [\n  [UP_BUTTON, TEAM],\n  [LEFT_BUTTON, REACTIONS],\n  [RIGHT_BUTTON, COMPLIMENTS],\n  [DOWN_BUTTON, APOLOGIES],\n];\n\nexport const keyIcons = {\n  [UP_BUTTON]: \"üîº\",\n  [LEFT_BUTTON]: \"‚óÄÔ∏è\",\n  [RIGHT_BUTTON]: \"‚ñ∂Ô∏è\",\n  [DOWN_BUTTON]: \"üîΩ\",\n};\n\nexport const contentLists = {\n  [TEAM]: [\"I got it!\", \"Need boost!\", \"Take the shot!\", \"Defending...\"],\n  [COMPLIMENTS]: [\"Nice shot!\", \"Great pass!\", \"Thanks!\", \"What a save!\"],\n  [REACTIONS]: [\"OMG!\", \"Noooo!\", \"Wow!\", \"Close one!\"],\n  [APOLOGIES]: [\"$#@%!\", \"No problem.\", \"Whoops...\", \"Sorry!\"],\n};\n","import { keyIcons } from \"../content\";\nimport styles from \"./ContentButton.module.css\";\n\nexport const ContentButton = ({ onClick: handleClick, keyName }) => (\n  <button className={styles.button} onClick={handleClick}>\n    {keyIcons[keyName]}\n  </button>\n);\n","import styles from \"./MessageList.module.css\";\nimport { keyIcons } from \"../content\";\n\nconst { upButton, leftButton, rightButton, downButton } = keyIcons;\nconst arrowIcons = [upButton, leftButton, rightButton, downButton];\n\nexport const MessageList = ({\n  content,\n  type,\n  onSendMessage: handleSendMessage,\n}) => {\n  return (\n    <div className={styles.list}>\n      <h2 className={styles.quickChatHeading}>Quick Chat</h2>\n      <h3 className={styles.typeHeading}>{type}</h3>\n      {!content\n        ? null\n        : content.map((text, i) => {\n            return (\n              <div key={i}>\n                <button\n                  onClick={() => handleSendMessage(text)}\n                  className={styles.button}\n                >\n                  <span className={styles.icon}>{arrowIcons[i]}</span>\n                  <span>{text}</span>\n                </button>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n","import { DirectionalPad } from \"../DirectionalPad\";\nimport { useState, useEffect } from \"react\";\n\nimport { useCountdown } from \"../app/useCountdown\";\nimport { ContentButton } from \"../ContentButton\";\nimport { MessageList } from \"../MessageList\";\n\nimport {\n  REACTIONS,\n  COMPLIMENTS,\n  TEAM,\n  APOLOGIES,\n  contentLists,\n} from \"../content\";\n\nexport const ChatControl = ({ onSendMessage }) => {\n  const [visibleList, setVisibleList] = useState(null);\n  const [remainingTime, resetTimer] = useCountdown(3);\n\n  useEffect(() => {\n    if (remainingTime === 0) setVisibleList(null);\n  }, [remainingTime]);\n\n  const handleOpenSection = (section) => {\n    resetTimer();\n    setVisibleList(section);\n  };\n\n  const handleSendMessage = (message) => {\n    setVisibleList(null);\n    onSendMessage(message);\n  };\n\n  return (\n    <div>\n      {visibleList && (\n        <MessageList\n          type={visibleList}\n          content={contentLists[visibleList]}\n          onSendMessage={handleSendMessage}\n        />\n      )}\n      {!visibleList && (\n        <DirectionalPad>\n          <ContentButton\n            keyName=\"upButton\"\n            onClick={() => handleOpenSection(TEAM)}\n          />\n          <ContentButton\n            keyName=\"leftButton\"\n            onClick={() => handleOpenSection(REACTIONS)}\n          />\n          <ContentButton\n            keyName=\"rightButton\"\n            onClick={() => handleOpenSection(COMPLIMENTS)}\n          />\n          <ContentButton\n            keyName=\"downButton\"\n            onClick={() => handleOpenSection(APOLOGIES)}\n          />\n        </DirectionalPad>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useCountdown = (startTime) => {\n  const [seconds, setSeconds] = useState(startTime);\n\n  const handleReset = () => {\n    setSeconds(startTime);\n  };\n\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      setSeconds((s) => s - 1);\n    }, 1000);\n    if (seconds === 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [seconds]);\n\n  return [seconds, handleReset];\n};\n","import { useState } from \"react\";\n\nimport { ChatWindow } from \"./ChatWindow\";\nimport { PlayerName } from \"./PlayerName\";\nimport { ChatControl } from \"./ChatControl\";\n\nexport function App() {\n  const [messageList, setMessageList] = useState([]);\n  const [name, setName] = useState(\"Player 1\");\n\n  const handleSendMessage = (text) => {\n    const id = Date.now();\n    setMessageList((previousList) => {\n      return [...previousList, { id, name, text }];\n    });\n  };\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n      }}\n    >\n      <PlayerName handleSetName={setName} />\n      <ChatWindow content={messageList} />\n      <ChatControl onSendMessage={handleSendMessage} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}